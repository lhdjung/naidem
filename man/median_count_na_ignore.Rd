% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/median-count-na-ignore.R
\name{median_count_na_ignore}
\alias{median_count_na_ignore}
\title{How many \code{NA}s need to be ignored for a median estimate?}
\usage{
median_count_na_ignore(x)
}
\arguments{
\item{x}{A numeric vector or similar.}
}
\value{
Integer (length 1). The value ranges from zero to
\code{length(which(is.na(x)))}, i.e., the total number of missing values in \code{x}.
}
\description{
\code{median_count_na_ignore()} returns the number of missing values
that need to be ignored to safely determine the median of the remaining
values. The point is to retain as many \code{NA}s as possible when looking for a
median estimate, instead of simply ignoring all of them.

This function is currently experimental. It only works if the number of
known values is odd (see examples).
}
\examples{
# The median can only be `8`, so
# there is no need to ignore the `NA`:
median_count_na_ignore(c(8, 8, 8, NA))

# Here, the median depends on the value
# behind `NA`, so the `NA` really must be ignored:
median_count_na_ignore(c(8, 9, 9, NA))

# Ignoring two `NA`s leads to the same
# state as in the first case:
median_count_na_ignore(c(8, 8, 8, NA, NA, NA))

# However, the function wrongly treats
# this in the same way:
median_count_na_ignore(c(8, 9, NA, NA, NA))
}
